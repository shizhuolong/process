<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.apdplat.portal.costManagement.dao.CostCenterVerifyDao">

	<!-- 成本中心列表 -->
	<select id="findCostCenterList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT T.GROUP_ID_1_NAME,T.GROUP_ID_1, T.CC_CODE, T.CC_DESC, T.UNIT_NAME, T.UNIT_ID
		  FROM PODS.TAB_ODS_GB_CENTER_UNIT_BACK T WHERE 1=1 
		  <if test="@org.apache.commons.lang.StringUtils@isNotBlank(orgLevel)">
		  	<choose>
	        	<when test="orgLevel==1">
	            </when>
	            <when test="orgLevel==2">
	               AND T.GROUP_ID_1 = #{orgCode}
	            </when>
	            <otherwise>
	               AND 1=2
	            </otherwise>
        	 </choose>
		  </if>
		  <if test="@org.apache.commons.lang.StringUtils@isNotBlank(regionCode)">
		  	AND T.GROUP_ID_1 = #{regionCode}
		  </if>
		  <if test="@org.apache.commons.lang.StringUtils@isNotBlank(unitCode)">
		  	AND T.UNIT_ID = #{unitCode}
		  </if>
		  <if test="@org.apache.commons.lang.StringUtils@isNotBlank(centerCode)">
		  	AND T.CC_CODE = #{centerCode}
		  </if>
		  <if test="@org.apache.commons.lang.StringUtils@isNotBlank(centerName)">
		  	AND T.CC_DESC LIKE CONCAT(CONCAT('%',#{centerName}),'%')
		  </if>
		   <if test="@org.apache.commons.lang.StringUtils@isNotBlank(isMarking)">
			   <choose>
		        	<when test="isMarking==1">
		        		AND T.UNIT_ID IS NOT NULL
		            </when>
		            <otherwise>
		               AND T.UNIT_ID IS NULL
		            </otherwise>
	        	 </choose>
		   </if>
		ORDER BY T.GROUP_ID_1,T.UNIT_ID
	</select>
	
	<!-- 根据地市编码查询该地市下所有营服 -->
	<select id="findUnitList" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT T.UNIT_ID, T.UNIT_NAME
		  FROM PCDE.TAB_CDE_GROUP_CODE T
		 WHERE T.GROUP_ID_1 = #{orgCode}
		 AND 	T.IS_VALID=1
	</select>
	
	<!--修改单条成本中心信息 -->
	<update id="saveRow" parameterType="java.util.Map">
		UPDATE PODS.TAB_ODS_GB_CENTER_UNIT_BACK T
		   SET T.UNIT_ID = #{unitCode}, 
		       T.UNIT_NAME = #{unitName}
		 WHERE T.CC_CODE = #{centerCode}
		   AND T.GROUP_ID_1 = #{regionCode}
	</update>
	
	<!-- 删除成本中心临时表数据 -->
	<delete id="deleteCostTemp" parameterType="java.util.Map">
		DELETE FROM PODS.TAB_ODS_GB_CENTER_UNIT_TEMP 
		 <choose>
		 	<when test="orgLevel==2">
		 		WHERE GROUP_ID_1=#{orgCode}
		 	</when>
		 	<otherwise>
		 		WHERE 1=2
		 	</otherwise>
	     </choose>
	</delete>
	
	<!-- 验证是否有成本中心名称与码表营服中心名称不一致的数据 -->
	<select id="queryNotExistsUnits" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT T1.UNIT_NAME
			  FROM PODS.TAB_ODS_GB_CENTER_UNIT_TEMP T1
			 WHERE NOT EXISTS (SELECT 1
			          FROM PCDE.TAB_CDE_GROUP_CODE T2
			         WHERE T1.UNIT_NAME = T2.UNIT_NAME
			           AND T2.IS_VALID = 1
					 		AND T2.GROUP_ID_1=#{orgCode}
			           )
			   		AND T1.GROUP_ID_1=#{orgCode}
	</select>
	
	<!-- <select id="queryNotExistsUnits" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT T1.UNIT_NAME
			  FROM PODS.TAB_ODS_GB_CENTER_UNIT_TEMP T1
			 WHERE NOT EXISTS (SELECT 1
			          FROM PCDE.TAB_CDE_GROUP_CODE T2
			         WHERE T1.UNIT_NAME = T2.UNIT_NAME
			           AND T2.IS_VALID = 1
			           <choose>
					 	<when test="orgLevel==2">
					 		AND T2.GROUP_ID_1=#{orgCode}
					 	</when>
					 	<otherwise>
					 		AND 1=2
					 	</otherwise>
				     </choose>
			           )
			   <choose>
			   	<when test="orgLevel==2">
			   		AND T1.GROUP_ID_1=#{orgCode}
			   	</when>
			   	<otherwise>
			   		AND 1=2
			   	</otherwise>
			   </choose>
	</select> -->
	
	<!-- 使用临时表中的数据更新结果表 -->
	<update id="updateCostData" parameterType="java.util.Map">
		MERGE INTO PODS.TAB_ODS_GB_CENTER_UNIT_BACK T1
			USING (SELECT T1.CC_CODE,T2.UNIT_NAME,T2.UNIT_ID
			       FROM PODS.TAB_ODS_GB_CENTER_UNIT_TEMP T1
			       JOIN PCDE.TAB_CDE_GROUP_CODE T2
			       ON   (T1.UNIT_NAME=T2.UNIT_NAME)
			       WHERE T2.IS_VALID=1 AND T1.CC_CODE IS NOT NULL AND T1.CC_CODE &lt;&gt;'0'
			        <choose>
				   	<when test="orgLevel==2">
				   		 AND   T2.GROUP_ID_1=#{orgCode} AND T1.GROUP_ID_1=#{orgCode}
				   	</when>
				   	<otherwise>
				   		AND 1=2
				   	</otherwise>
				   </choose>
			       )T3
			ON  (T1.CC_CODE=T3.CC_CODE)
			WHEN MATCHED THEN
			  UPDATE SET T1.UNIT_ID=T3.UNIT_ID
			            ,T1.UNIT_NAME=T3.UNIT_NAME
			            <!-- ,T1.IS -->
			   <choose>
			   	<when test="orgLevel==2">
			   		WHERE T1.GROUP_ID_1=#{orgCode} AND (T1.CC_CODE IS NOT NULL AND T1.CC_CODE &lt;&gt;'0')
			   	</when>
			   	<otherwise>
			   		WHERE 1=2
			   	</otherwise>
			   </choose>
	</update>
	
	<!--根据地市编码查询成本中心表中是否有营服中心名称或编码为空的数据  -->
	<select id="queryNullUnit" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT T.CC_DESC
			  FROM PODS.TAB_ODS_GB_CENTER_UNIT_BACK T
			 WHERE T.GROUP_ID_1 = #{regionCode}
			   AND T.UNIT_ID IS NULL
	</select>
	
	<!-- 更新成本中心表数据(确认划分成本中心) -->
	<update id="updateState" parameterType="java.lang.String">
		UPDATE PODS.TAB_ODS_GB_CENTER_UNIT_BACK T
			   SET T.STATE = 1
			 WHERE T.GROUP_ID_1 = #{regionCode}
	</update>
	
	<insert id="inserToTmp" parameterType="java.util.List">
		INSERT INTO PODS.TAB_ODS_GB_CENTER_UNIT_TEMP
		  ( GROUP_ID_1_NAME, CC_CODE, CC_DESC, UNIT_NAME)
		  SELECT *
		    FROM (
		         <foreach collection="list" item="item" index="index" separator="union all">
		         	SELECT 
		         		   #{item.GROUP_ID_1_NAME,jdbcType=VARCHAR} AS GROUP_ID_1_NAME,
		         		   #{item.CC_CODE,jdbcType=VARCHAR} AS CC_CODE,
		         		   #{item.CC_DESC,jdbcType=VARCHAR} AS CC_DESC,
		         		   #{item.UNIT_NAME,jdbcType=VARCHAR} AS UNIT_NAME
		         	FROM DUAL
		         </foreach>
		         )                                          
	</insert>
</mapper>