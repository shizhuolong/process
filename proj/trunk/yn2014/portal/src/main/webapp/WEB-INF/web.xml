<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring.xml</param-value>
    </context-param>
    <listener>
        <description>经过定制的spring监听器</description>
        <listener-class>org.apdplat.platform.spring.APDPlatContextLoaderListener</listener-class>
    </listener>
    <listener>
        <description>用户登录注销监听</description>
        <listener-class>org.apdplat.module.security.service.UserLoginListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
    <!-- spring security监听session的生存周期事件 -->
    <listener>
        <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
    </listener>
    <!-- 性能过滤器放置到最前, 放置到最后不起作用，放置到最前的统计时间更准确地表示了服务器的处理速度 -->
 <!--     <filter>
        <description>记录请求的处理时间，为性能分析提供数据</description>
        <filter-name>PerformanceFilter</filter-name>
        <filter-class>org.apdplat.module.monitor.filter.PerformanceFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>PerformanceFilter</filter-name>
        <url-pattern>*.action</url-pattern>
    </filter-mapping>-->
    
    <!-- 对于每一个数据库，都需要一个OpenEntityManagerInViewFilter  -->
    <!-- 默认数据库 -->
    <filter>
        <description>在每一次请求到来的时候打开Jpa的实体管理器，在请求结束的时候关闭</description>
        <filter-name>OpenEntityManagerInViewFilter</filter-name>
        <filter-class>org.apdplat.platform.filter.OpenEntityManagerInViewFilter</filter-class>
        <init-param>
            <param-name>excludeSuffixs</param-name>
            <param-value>js,css,jpg,gif,png</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>OpenEntityManagerInViewFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>    
    <!-- ForLog数据库 -->    
    <filter>
        <description>在每一次请求到来的时候打开Jpa的实体管理器，在请求结束的时候关闭</description>
        <filter-name>OpenEntityManagerInViewFilterForLog</filter-name>
        <filter-class>org.apdplat.platform.filter.OpenEntityManagerInViewFilter</filter-class>
        <init-param>
            <param-name>excludeSuffixs</param-name>
            <param-value>js,css,jpg,gif,png</param-value>
        </init-param>
        <init-param>
            <param-name>entityManagerFactoryBeanName</param-name>
            <param-value>entityManagerFactoryForLog</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>OpenEntityManagerInViewFilterForLog</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
        
    <filter>
        <description>对POST方式提交的数据做编码转换，对GET方式提交的数据需要在应用服务器中配置URIEncoding="utf-8"</description>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter>
        <description>生成随机验证码</description>
        <filter-name>jcaptchaFilter</filter-name>
        <filter-class>org.apdplat.module.security.service.filter.JCaptchaFilter</filter-class>
    </filter>
    <!-- jcaptcha图片生成URL. -->
    <filter-mapping>
            <filter-name>jcaptchaFilter</filter-name>
            <url-pattern>/security/jcaptcha.png</url-pattern>
    </filter-mapping>

    <!-- jcaptcha登录表单处理URL.
                 必须放在springSecurityFilter的filter-mapping定义之前 -->
    <filter-mapping>
            <filter-name>jcaptchaFilter</filter-name>
            <url-pattern>/j_spring_security_check</url-pattern>
    </filter-mapping>
    <filter>
        <description>系统安全模块，复杂整个系统的安全拦截工作</description>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
  
    <filter>
        <filter-name>otherSystemFilter</filter-name>
        <filter-class>org.apdplat.platform.filter.OtherSystemMenusVisitFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>otherSystemFilter</filter-name>
        <url-pattern>/otherSys/*</url-pattern>
    </filter-mapping>
    
    <filter>
        <filter-name>securityContextFilter</filter-name>
        <filter-class>org.apdplat.platform.filter.UserServletFilter</filter-class>
    </filter>
    <filter-mapping>
		<filter-name>securityContextFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>securityContextFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>securityContextFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

    <filter>
        <description>WEB前端控制器</description>
        <filter-name>struts2</filter-name>
        <filter-class>
            org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
        </filter-class>
    </filter>
    <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <servlet>
		<servlet-name>SpringContext</servlet-name>
		<servlet-class>org.apdplat.wgreport.support.servlets.SpringServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet>
		<servlet-name>JSONCommandFacade</servlet-name>
		<servlet-class>org.apdplat.wgreport.support.servlets.JSONCommandFacadeServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>JSONCommandFacade</servlet-name>
		<url-pattern>/jsCmd</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>FileDownload</servlet-name>
		<servlet-class>org.apdplat.wgreport.support.servlets.FileDownloadServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>FileDownload</servlet-name>
		<url-pattern>/fileDownload</url-pattern>
	</servlet-mapping>
	<!-- 智能报表测试 -->
	<servlet>
	 	<servlet-name>Report</servlet-name>
	 	<servlet-class>com.lch.report.action.ReportServlet</servlet-class>
	 </servlet>
	 <servlet-mapping>
	 	<servlet-name>Report</servlet-name>
	 	<url-pattern>/lchreport</url-pattern>
	 </servlet-mapping>
  <!--会话超时时间，单位为分钟-->
    <session-config>
        <session-timeout>180</session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>default.jsp</welcome-file>
        <welcome-file>default.html</welcome-file>
        <welcome-file>default.htm</welcome-file>
    </welcome-file-list>
</web-app>